INCLUDE MACROS2.INC               
.model LARGE
.386
.stack 64
.data
ASD DB 10H
OBJECT_LOC_Y DB 03h
TYPEE DB 10
AY7AGA DB 100 DUP(?)
HEALTH_BAR_LBL DB 'HEALTH BAR $'
DECREMENT_HEALTH_LBL DB 'DECREMENT HEALTH $'
REFLECTING_WALL_LBL DB 'REFLECTING WALL $'
MOVE_UP_LBL DB 'MOVE UP $'
MOVE_DOWN_LBL DB 'MOVE DOWN $'
FIRE_LBL DB 'FIRE $'
LOSER_LBL DB 'LOSER $'
WINNER_LBL DB 'WINNER $'
AsAS DB 100 DUP(?)
PLAYER1_HEALTH DB 10
PLAYER2_HEALTH DB 10
END_OF_HEALTH_BAR DB 80 DUP('_'),'$'
AsAAAS DB 100 DUP(?) 
LOCP1 DB 12 ;CURRENT LOCATION PLAYER 1
LOCP2 DB 12;CURRENT LOCATION PLAYER 2
UPDOWNP1 DB ?
UPDOWNP2 DB ?
MISSILES_P1_CNT DW 0
MISSILES_P2_CNT DW 0
MISSILES_P1_PTR DW 0
MISSILES_P2_PTR DW 0
AY DB 10 DUP(0)
MISSILES_LOC_P1x DB 10000 DUP(0)
MISSILES_LOC_P1Y DB 10000 DUP(0)
MISSILES_LOC_P2X DB 10000 DUP(0)
MISSILES_LOC_P2Y DB 10000 DUP(0)
MISSILE_DIRECTIONP1 DB 10000 DUP(0)
MISSILE_DIRECTIONP2 DB 10000 DUP(0)  
AWEQWEW DB 1000 DUP(0)  
mesP1 DB 'PLEASE ENTER YOUR NAME','$' 
startg DB '* TO START GAME PLEASE PRESS F2','$'
EXITG DB '* TO EXIT PLEASE PRESS ESC','$' 
P1NAME db 16,?,16 dup('$')
DB '$'  
P2NAME db 16,?,16 dup('$')
DB '$' 
sent DB 0
recieved DB 0
reconlymsg DB 'invitation sent please wait for the response','$' 
sendtostartmsg DB 'invitation recieved please press f2 to start game','$'
INVITER DB 0
AWAY DB 0
P1CURSOR DW 0106H
P2CURSOR DW 0D06H
ENDCHATTING DB "- TO END CHAT WITH $"
ENDCHATTING2 DB "PRESS F3.$"
NO2TTEN DB ':$'
P1_IN_CURSOR DW 1511H
P2_IN_CURSOR DW 1611H
.code         
main proc far             
mov ax,@data
mov ds,ax
mov es,ax 
port
mov ah,0        ;OPEN TEXT MODE 
mov al,3h
int 10h

MainMenu ;SHOW MAIN MENU 
SEND_NAME ;TO RECIEVE THE OTHER PLAYER NAME
CHATTING
mov ch, 32    ;HIDE CURSOR
mov ah, 1
int 10h
    
    DRAW_STATUS_BAR
    DRAW_HEALTH_BAR PLAYER1_HEALTH,PLAYER2_HEALTH ;DRAW HEALTH BARS AND PLAYER NAMES                                
    DRAWPLAYER1 LOCP1,0EEH                        ;DRAW PLAYER1
    DRAWPLAYER2 LOCP2,033H                        ;DRAW PLAYER2
    MOV DI,0
L1:     
    mov ax,0 
    recieve ah
    mov al,0
    xchg al,ah
    check ax,AWAY  
    mov ax,0
    MOV CH,PLAYER1_HEALTH                         ;CHECK IF P1 HEALTH=0 OR B2 HEALTH =0 TO END THE GAME
    MOV CL,PLAYER2_HEALTH
    CMP CH,0
    JZ EXIT1
    CMP CL,0
    JZ EXIT2                                       
    delay
    XOR DI,1
    JZ A
    GEN_RAND_OBJS
    A:
    move_all_missiles                             
    DRAWPLAYER1 LOCP1,0EEH                        ;DRAW PLAYER1
    DRAWPLAYER2 LOCP2,033H                        ;DRAW PLAYER2
    CHECK_ALL_MISSILES
        
    UPDATE_HEALTH_BAR PLAYER1_HEALTH,PLAYER2_HEALTH    
    mov ah,1                                     ;TAKE A KEY FROM THE USER
    int 16h
    CMP AH,1
    JZ SKIP
    MOV AL,0
    XCHG AL,AH                                   ;USE THE KEY TAKEN FROM THE USER
    send al
    CHECK AX,INVITER
    MOV AH,0
    INT 16H    
    SKIP:  
JMP L1
EXIT1:
PLAYER1_STATUS LOSER_LBL    ;PRINT WHICH PLAYER IS WINNER ON STATUS BAR
PLAYER2_STATUS WINNER_LBL
MOV CX,0FFH
DELAYLOOP:
DELAY
LOOP DELAYLOOP
JMP EXIT
EXIT2:
PLAYER1_STATUS WINNER_LBL
PLAYER2_STATUS LOSER_LBL
MOV CX,0FFH
DELAYLOOP1:
DELAY
LOOP DELAYLOOP1
JMP EXIT
EXIT:
mov ah,04CH ;DOS "terminate" function
int 021H
hlt 
main endp   
end main 